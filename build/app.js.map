{"version":3,"sources":["../src/app.js"],"names":["app","set","path","join","__dirname","use","express","json","urlencoded","extended","static","keyRouter","req","res","next","passport","initialize","defaultDBUrl","mongoose","connect","process","env","DB_URL","err","locals","message","error","get","status","render"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA;AACAA,IAAIC,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEAD,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAP,IAAIK,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAT,IAAIK,GAAJ,CAAQ,6BAAR;AACAL,IAAIK,GAAJ,CAAQC,kBAAQI,MAAR,CAAeR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAGAJ,IAAIK,GAAJ,CAAQ,MAAR,EAAgBM,aAAhB;;AAEA;AACAX,IAAIK,GAAJ,CAAQ,UAACO,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BA,OAAK,0BAAY,GAAZ,CAAL;AACD,CAFD;;AAIA;AACAd,IAAIK,GAAJ,CAAQU,mBAASC,UAAT,EAAR;;AAEA;AACA,IAAMC,eAAe,gCAArB;AACAC,mBAASC,OAAT,CAAiBC,QAAQC,GAAR,CAAYC,MAAZ,IAAsBL,YAAvC;;AAGA;AACAjB,IAAIK,GAAJ,CAAQ,UAACkB,GAAD,EAAMX,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B;AACAD,MAAIW,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAZ,MAAIW,MAAJ,CAAWE,KAAX,GAAmBd,IAAIZ,GAAJ,CAAQ2B,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAV,MAAIe,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAf,MAAIgB,MAAJ,CAAW,OAAX;AACD,CARD;;kBAUe7B,G","file":"app.js","sourcesContent":["import createError from 'http-errors'\nimport express from 'express'\nimport path from 'path'\nimport cookieParser from 'cookie-parser'\nimport logger from 'morgan'\nimport passport from 'passport'\nimport mongoose from 'mongoose'\n\n\nimport keyRouter from './routes/key'\n\nconst app = express()\n// view engine setup\napp.set('views', path.join(__dirname, 'views'))\napp.set('view engine', 'jade')\n\napp.use(logger('dev'))\napp.use(express.json())\napp.use(express.urlencoded({ extended: false }))\napp.use(cookieParser())\napp.use(express.static(path.join(__dirname, 'public')))\n\n\napp.use('/key', keyRouter)\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  next(createError(404))\n})\n\n// initialise passport and its strategy\napp.use(passport.initialize())\n\n// code to initialise the database\nconst defaultDBUrl = 'mongodb://127.0.0.1:27017/test'\nmongoose.connect(process.env.DB_URL || defaultDBUrl)\n\n\n// error handler\napp.use((err, req, res, next) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message\n  res.locals.error = req.app.get('env') === 'development' ? err : {}\n\n  // render the error page\n  res.status(err.status || 500)\n  res.render('error')\n})\n\nexport default app\n"]}